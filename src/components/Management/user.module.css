/* Reset default margins and padding */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Container for the entire list */
.entryListContainer {
  padding: 20px;
  background-color: #fff;
  height: 100%;
  display: flex;
  flex-direction: column;
}

/* Title styling */
.title {
  height: 45px;
  margin: 0 0 15px 0;
  font-size: 24px;
  font-weight: 600;
  color: #333;
}

/* Table wrapper with scroll support */
.tableWrapper {
  flex: 1;
  overflow-x: auto;
  overflow-y: auto;
  position: relative;
}

/* Table styling */
.entryTable {
  width: 100%;
  border-collapse: collapse;
  font-family: Arial, sans-serif;
}

.entryTable th,
.entryTable td {
  border: 1px solid #ddd;
  padding: 10px 12px;
  text-align: left;
  font-size: 14px;
}

.entryTable th {
  background-color: #f7f7f7;
  font-weight: bold;
  color: #333;
  position: sticky;
  top: 0;
  z-index: 1;
  cursor: default; /* Default cursor for non-sortable headers */
}

.entryTable th.sortable {
  cursor: pointer;
}

.entryTable th.sorted {
  background-color: #e9ecef; /* Highlight sorted column */
}

.entryTable th.asc::after {
  content: " ↑";
  margin-left: 5px;
  color: #007bff;
}

.entryTable th.desc::after {
  content: " ↓";
  margin-left: 5px;
  color: #007bff;
}

.entryTable tr:hover {
  background-color: #f9f9f9;
}

.entryTable input[type="radio"] {
  margin: 0 auto;
  display: block;
}

/* Cell and row styling */
.entryListCell {
  padding: 14px 15px;
}

.entryListItem {
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.entryListItem:hover {
  background-color: #f0f0f0;
}

.selectedRow {
  background-color: #d0f0d0;
}

.change {
  box-shadow: inset 0 0 10px 2px rgba(255, 165, 0, 0.8);
}

/* Button container */
.buttonContainer {
  height: 40px;
  margin-top: 15px;
  flex-shrink: 0;
  display: flex;
  gap: 15px;
  justify-content: flex-start;
}

/* Button styles */
button,
.actionButton {
  padding: 10px 20px;
  font-size: 14px;
  font-family: Arial, sans-serif;
  border-radius: 4px;
  border: 1px solid var(--button-primary-border) !important;
  cursor: pointer;
  transition: background 0.2s, color 0.2s, border-color 0.2s;
  background: var(--button-primary-bg) !important;
  color: var(--button-primary-text) !important;
}

button:hover:not(.disabledButton),
.actionButton:hover:not(.disabledButton) {
  transform: translateY(-2px);
  background: var(--button-primary-bg-hover) !important;
  color: var(--button-primary-text) !important;
}

button:active:not(.disabledButton),
.actionButton:active:not(.disabledButton) {
  transform: translateY(0);
  background: var(--button-primary-bg-hover) !important;
  color: var(--button-primary-text) !important;
}

.disabledButton {
  background-color: #e0e0e0;
  color: #aaa;
  cursor: not-allowed;
}

/* Modal styling */
.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal_content {
  background-color: #fff;
  padding: 20px;
  width: 300px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.modal_header {
  display: flex;
  justify-content: flex-end;
}

.close_button {
  background-color: #ccc;
  border: none;
  padding: 10px;
  cursor: pointer;
}

.close_button:hover {
  background-color: #aaa;
}

.selected-row {
  background-color: #0fa260;
  transition: background-color 0.3s ease;
}

/* Filter styling */
.filterCard {
  background-color: #f7f7f7;
  padding: 15px;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-bottom: 20px;
}

.filterRow {
  display: flex;
  align-items: center;
  gap: 10px;
}

.select {
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 14px;
  background-color: #fff;
  cursor: pointer;
  transition: border-color 0.3s ease;
}

.select:focus {
  border-color: #007bff;
  outline: none;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

.input {
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 14px;
  width: 200px;
  transition: border-color 0.3s ease;
}

.input:focus {
  border-color: #007bff;
  outline: none;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}